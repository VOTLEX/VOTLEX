import os
import sys
import time
import random
import requests
import datetime
import webbrowser
import pytz
import json
from faker import Faker
from secrets import token_hex
from user_agent import generate_user_agent
from random import choice, randrange
from threading import Thread
from rich.console import Console
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import re
from random import choice as cc, randint as rr
from uuid import uuid4 as gg
import random
import os
from rich.console import Console
from rich.live import Live
import requests
from user_agent import generate_user_agent
import sys
import webbrowser
import sys as n
from datetime import datetime
from colorama import Fore, Back
import secrets
from time import time
from secrets import token_hex
from random import randrange,choice
from time import sleep
from uuid import uuid4
import string
import json
from threading import Thread
import uuid
import re
from requests import get
from concurrent.futures import ThreadPoolExecutor
webbrowser.open('https://t.me/votlextool1')
from hashlib import md5
try:
    from cfonts import render, say
except:
    os.system('pip install python-cfonts')

B = "\033[1;30m"
R = "\033[1;31m"
F = '\033[1;32m' 
n = "\033[97m"
C = "\033[1;97m"
X = '\033[1;33m' 
G = "\033[1;32m" 
Y = "\033[1;33m" 
Bl = "\033[1;34m" 
P = "\033[1;35m" 
C = "\033[1;36m" 
N = "\033[1;37m" 
S = '\033[1;33m'
F = '\033[1;33m' 
A  = '\033[2;34m'
Z = '\033[1;31m' 
H="\x1b[38;5;208m"
MAGENTA = '\033[95m'
reset = "\033[0m"
r = "\033[0m"
bbo = "\033[1m"
bo = "\033[1m"
normal = "\033[0m"
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m'  
X = '\033[1;33m'  
Z1 = '\033[2;31m'  
F = '\033[2;32m'  
A = '\033[2;34m'  
C = '\033[2;35m'  
B = '\x1b[38;5;208m'  
Y = '\033[1;34m'  
M = '\x1b[1;37m'  
S = '\033[1;33m'
U = '\x1b[1;37m'  
R = '\x1b[1;34m'
a1 = '\x1b[1;31m'  
a2 = '\x1b[1;34m'  
a3 = '\x1b[1;32m'  
a4 = '\x1b[1;33m'  
a5 = '\x1b[38;5;208m'  
a6 = '\x1b[38;5;5m'  
E = '\033[1;31m'
X = '\033[1;33m'
F = '\033[2;32m'
M = '\x1b[1;37m'
B = '\x1b[38;5;208m'
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m'  
X = '\033[1;33m'  
Z1 = '\033[2;31m'  
F = '\033[2;32m'  
A = '\033[2;34m'  
C = '\033[2;35m'  
B = '\x1b[38;5;208m'  
Y = '\033[1;34m'  
M = '\x1b[1;37m'  
S = '\033[1;33m'
U = '\x1b[1;37m'  
R = '\x1b[1;34m'
a1 = '\x1b[1;31m'  
a2 = '\x1b[1;34m'  
a3 = '\x1b[1;32m'  
a4 = '\x1b[1;33m'  
a5 = '\x1b[38;5;208m'  
a6 = '\x1b[38;5;5m'  
E = '\033[1;31m'
X = '\033[1;33m'
F = '\033[2;32m'
M = '\x1b[1;37m'
B = '\x1b[38;5;208m'
BR = '\x1b[38;5;208m'
AH2 = '\x1b[38;5;204m' 
AS2 = '\x1b[38;5;220m'
MJ = '\x1b[38;5;193m'
MJ2 = '\x1b[38;5;216m'
MJ3 = '\x1b[38;5;190m'
MJ4 = '\x1b[38;5;106m'
ma = '\x1b[38;5;26m'
#»»»»»»»{𝐫𝐞𝐧𝐤𝐥𝐞𝐫}««««««

Ex = 0
gg = 0
votlex = render('VOTLEX', colors=['white', 'cyan'], align='center')
print(votlex)
print('')
webbrowser.open('https://t.me/votlextool1')
os.system('clear')
votlex1 = render('SEC BRO', colors=['white', 'cyan'], align='center')
print(votlex1)




def Users():
    global Ex
    try:
        LsD = ''.join(random.choices(string.ascii_letters + string.digits, k=32))
        UseriD = str(random.randrange(10000, 17699999))
        variables = json.dumps({"id": UseriD, "render_surface": "PROFILE"})
        data = {"lsd": LsD, "variables": variables, "doc_id": "25618261841150840"}
        response = requests.post("https://www.instagram.com/api/graphql", headers={"X-FB-LSD": LsD}, data=data)
        username = response.json()['data']['user']['username']
        with open("votlex2011.txt", "a") as file:
            file.write(username + "\n")
        Ex+=1
        sys.stdout.write(f"\r[{N}{Ex}{C}]{r}->  KULLANCI : {username}{reset}\r")
        return username
    except Exception as e:
        return None
def ExUsers():
    for _ in range(2500):
        Users()
def tnach():
    global Ex
    try:
        LsD = ''.join(random.choices(string.ascii_letters + string.digits, k=32))
        UseriD = str(random.randrange(10000, 263014407))
        variables = json.dumps({"id": UseriD, "render_surface": "PROFILE"})
        data = {"lsd": LsD, "variables": variables, "doc_id": "25618261841150840"}
        response = requests.post("https://www.instagram.com/api/graphql", headers={"X-FB-LSD": LsD}, data=data)
        username = response.json()['data']['user']['username']
        with open("votlex2012.txt", "a") as file:
            file.write(username + "\n")
        Ex+=1
        sys.stdout.write(f"\r[{N}{Ex}{C}]{r}-> KULLANCI : {username}{reset}\r")
        return username
    except Exception as e:
        return None
def u():
    for _ in range(2500):
        tnach()
def tlt():
    global Ex
    try:
        LsD = ''.join(random.choices(string.ascii_letters + string.digits, k=32))
        UseriD = str(random.randrange(10000, 361365133))
        variables = json.dumps({"id": UseriD, "render_surface": "PROFILE"})
        data = {"lsd": LsD, "variables": variables, "doc_id": "25618261841150840"}
        response = requests.post("https://www.instagram.com/api/graphql", headers={"X-FB-LSD": LsD}, data=data)
        username = response.json()['data']['user']['username']
        with open("votlex2013.txt", "a") as file:
            file.write(username + "\n")
        Ex+=1
        sys.stdout.write(f"\r[{N}{Ex}{C}]{r}-> KULLANCI : {username}{reset}\r")
        return username
    except Exception as e:
        return None
def qh():
    for _ in range(2500):
        tlt()
def rba():
    global Ex
    try:
        LsD = ''.join(random.choices(string.ascii_letters + string.digits, k=32))
        UseriD = str(random.randrange(10000, 61331927186))
        variables = json.dumps({"id": UseriD, "render_surface": "PROFILE"})
        data = {"lsd": LsD, "variables": variables, "doc_id": "25618261841150840"}
        response = requests.post("https://www.instagram.com/api/graphql", headers={"X-FB-LSD": LsD}, data=data)
        username = response.json()['data']['user']['username']
        with open("votlex14-23.txt", "a") as file:
            file.write(username + "\n")
        Ex+=1
        sys.stdout.write(f"\r[{N}{Ex}{C}]{r}-> KULLANCI : {username}{reset}\r")
        return username
    except Exception as e:
        return None
def bh():
    for _ in range(2500):
        rba()
def fs(id):
    global gg
    url = f'https://i.instagram.com/api/v1/friendships/{id}/followers/?count=100&search_surface=follow_list_pag'
    headers = {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'en-US,en;q=0.9',
        'Cookie': f'mid=Y3bGYwALAAHNwaKANMB8QCsRu7VA; ig_did=092BD3C7-0BB2-414B-9F43-3170EAED8778; ig_nrcb=1; shbid=1685054; shbts=1675191368.6684434090; rur=CLN; ig_direct_region_hint=ATN; csrftoken=gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO; ds_user_id=921803283; sessionid={sessionid}',
        'Sec-Ch-Prefers-Color-Scheme': 'dark',
        'Sec-Ch-Ua': '"Not.A/Brand";v="8", "Chromium";v="114", "Microsoft Edge";v="114"',
        'Sec-Ch-Ua-Full-Version-List': '"Not.A/Brand";v="8.0.0.0", "Chromium";v="114.0.5735.201", "Microsoft Edge";v="114.0.1823.67"',
        'Sec-Ch-Ua-Mobile': '?0',
        'Sec-Ch-Ua-Platform': '"Windows"',
        'Sec-Ch-Ua-Platform-Version': '"15.0.0"',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.67',
        'X-Asbd-Id': '129477',
        'X-Csrftoken': 'gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO',
        'X-Ig-App-Id': '936619743392459',
        'X-Ig-Www-Claim': 'hmac.AR0g7ECdkTdrXy37TE9AoSnMndccWbB1cqrccYOZSLfcb8sd',
        'X-Requested-With': 'XMLHttpRequest',
    } 
    r = requests.get(url,headers=headers)
    if '{"message":"","spam":true,"status":"fail"}' in r.text:
        exit('block')
    for i in r.json()['users']:
        gg+=1
        userL = i['username']
        print(f"\r[{N}{gg}{C}]-> KULLANCI : {userL}{reset}\r")
        open("votlex k.ad.txt", "a").write(f'{userL}\n')
    if 'HI' in listoo:
        m_id=r.json()['next_max_id']
        for i in range(9999):
            r = requests.get(f'https://i.instagram.com/api/v1/friendships/{id}/followers/?count=100&max_id='+m_id+'&search_surface=follow_list_page',headers=headers)
            if '{"message":"","spam":true,"status":"fail"}' in r.text:
                exit('block')
            print()
            try:
                for i in r.json()['users']:
                    gg+=1
                    userL = i["username"]
                    print(f"\r[{N}{gg}{C}]-> KULLANCI : {userL}{reset}\r")
                    open("votlex k.ad.txt", "a").write(f'{userL}\n')
                try:
                    m_id=r.json()['next_max_id']
                except:
                    break
            except:
                if 'challenge' in r.text:
                    break
                else:
                    continue
    else:pass
    exit()
def fg(id):
    global gg
    url = f'https://i.instagram.com/api/v1/friendships/{id}/following/?count=200'
    headers = {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'en-US,en;q=0.9',
        'Cookie': f'mid=Y3bGYwALAAHNwaKANMB8QCsRu7VA; ig_did=092BD3C7-0BB2-414B-9F43-3170EAED8778; ig_nrcb=1; shbid=1685054; shbts=1675191368.6684434090; rur=CLN; ig_direct_region_hint=ATN; csrftoken=gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO; ds_user_id=921803283; sessionid={sessionid}',
        'Sec-Ch-Prefers-Color-Scheme': 'dark',
        'Sec-Ch-Ua': '"Not.A/Brand";v="8", "Chromium";v="114", "Microsoft Edge";v="114"',
        'Sec-Ch-Ua-Full-Version-List': '"Not.A/Brand";v="8.0.0.0", "Chromium";v="114.0.5735.201", "Microsoft Edge";v="114.0.1823.67"',
        'Sec-Ch-Ua-Mobile': '?0',
        'Sec-Ch-Ua-Platform': '"Windows"',
        'Sec-Ch-Ua-Platform-Version': '"15.0.0"',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.67',
        'X-Asbd-Id': '129477',
        'X-Csrftoken': 'gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO',
        'X-Ig-App-Id': '936619743392459',
        'X-Ig-Www-Claim': 'hmac.AR0g7ECdkTdrXy37TE9AoSnMndccWbB1cqrccYOZSLfcb8sd',
        'X-Requested-With': 'XMLHttpRequest',
    } 
    r = requests.get(url,headers=headers)
    print()
    if '{"message":"","spam":true,"status":"fail"}' in r.text:
        exit('block')
    for i in r.json()['users']:
        gg+=1
        userL = i['username']
        print(f"\r[{N}{gg}{C}]-> KULLANCI : {userL}{reset}\r")
        open("votlex k.ad.txt", "a").write(f'{userL}\n')
    if 'HI' in listoo:
        try:
            m_id=r.json()['next_max_id']
        except KeyError:
            exit()
        for i in range(9999):
            r = requests.get(f'https://i.instagram.com/api/v1/friendships/{id}/following/?count=200&max_id='+m_id,headers=headers)
            if '{"message":"","spam":true,"status":"fail"}' in r.text:
                exit('block')
            try:
                for i in r.json()['users']:
                    gg+=1
                    userL = i["username"]
                    print(f"\r[{N}{gg}{C}]-> KULLANCI : {userL}{reset}\r")
                    open("votlex k.ad.txt", "a").write(f'{userL}\n')
                try:
                    m_id=r.json()['next_max_id']
                except:
                    break
            except:
                if 'challenge' in r.text:
                    break
                else:
                    continue
    else:pass
    exit()	
print(f"""
[{N}2{C}]{r}{bbo} -> {C}𝙻𝙸̇𝚂𝚃 {F}𝙲̧𝙴𝙺𝙼𝙴 : {X} #𝙰𝙺𝚃𝙸̇𝙵

[{N}3{C}]{r}{bbo} -> {C}𝙻𝙸̇𝚂𝚃 {F}𝚂𝙸̇𝙻𝙼𝙴 : {X} #𝙰𝙺𝚃𝙸̇𝙵

[{N}4{C}]{r}{bbo} -> {C}𝙸̇𝙻𝙴𝚃𝙸̇𝚂̧𝙸̇𝙼 : {X} #𝙰𝙺𝚃𝙸̇𝙵
""")
try:
 egi = int(input(f"{C}[{N}→{C}] {X}𝐒𝐄𝐂̧ 𝐃𝐎𝐒𝐓𝐔𝐌 ☞︎︎︎ :  {r}"))
except:print('');exit(print(f'{C}[{N}+{C}] {N}𝐇𝐀𝐓𝐀𝐋𝐈 𝐓𝐔𝐒̧𝐋𝐀𝐃𝐈𝐍'))
if egi == 1:
    print('HATALI TUŞLAMA 2 veya 3 veya 4 basınız..')
    try:requests.get(f"https://api.telegram.org/bot{token}/sendvideo?chat_id={ID}&video=https://t.me/vtlxx/2&caption=𝗕𝗢𝗟 𝗛𝗜𝗧𝗟𝗘𝗥 𝗕𝗥𝗢\n@Votlex1 @Votlextool1")
    except:pass
    pass
elif egi == 2:
    os.system('clear')
    votlex = render('SEC BRO',colors=['white', 'cyan'], align='center')
    print(votlex)
    print(f"""
    {r}[{N}1{C}] -> {C}2011 {F}𝙻𝙸̇𝚂𝚃 {X} : #AKTİF
    [{N}2{C}] -> {C}2012 {F}𝙻𝙸̇𝚂𝚃 {X} : #AKTİF
    [{N}3{C}] -> {C}2013 {F}𝙻𝙸̇𝚂𝚃 {X} : #AKTİF
    [{N}4{C}] -> {C}2014 - 2023 ARASI {F}𝙻𝙸̇𝚂𝚃 {X} : #AKTİF
    [{N}5{C}] -> {C} 𝗞𝗨𝗟𝗟𝗔𝗡𝗖𝗜 𝗔𝗗𝗜 𝗜𝗟𝗘 {F}𝗟𝗜𝗦𝗧 {X} : #AKTİF
    """)
    hh = int(input(f"{C}[{N}→{C}] {N}𝖲𝖤𝖢̧ 𝖣𝖮𝖲𝖳𝖴𝖬  ☞︎︎︎ :{r}"))
    if hh ==1:
      threads = []
      for _ in range(100):
        thread = Thread(target=ExUsers)
        thread.start()
        threads.append(thread)
      for thread in threads:
        thread.join()
    elif hh ==2:
      threads = []
      for _ in range(100):
        thread = Thread(target=u)
        thread.start()
        threads.append(thread)
      for thread in threads:
        thread.join()
    elif hh ==3:
      threads = []
      for _ in range(100):
        thread = Thread(target=qh)
        thread.start()
        threads.append(thread)
      for thread in threads:
        thread.join()
    elif hh ==4:
      threads = []
      for _ in range(100):
        thread = Thread(target=bh)
        thread.start()
        threads.append(thread)
      for thread in threads:
        thread.join()
    elif hh == 5:
       gg = 0
       listoo = ['HI']    
       linux = 'clear'
       windows = 'cls'
       print('') 
       username = str(input(f"{r}[{N}+{C}] -> {C}  İG KULLANCI ADI GİR : "))
       print('')
       password = str(input(f"{r}[{N}+{C}] -> {C}  İG ŞİFRE GİR : "))
       print('')
       [linux, windows][os.name == 'nt']
       url = 'https://www.instagram.com/accounts/login/ajax/'
       data = {'username': f'{username}',
                    'enc_password': f'#PWD_INSTAGRAM_BROWSER:0:1589682409:{password}',
                   'queryParams': '{}',
               'optIntoOneTap': 'false'}            
       headers = {'accept': '*/*',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'ar,en-US;q=0.9,en;q=0.8',
            'content-length': '275',
            'content-type': 'application/x-www-form-urlencoded',
            'cookie': 'csrftoken=DqBQgbH1p7xEAaettRA0nmApvVJTi1mR; ig_did=C3F0FA00-E82D-41C4-99E9-19345C41EEF2; mid=X8DW0gALAAEmlgpqxmIc4sSTEXE3; ig_nrcb=1',
            'origin': 'https://www.instagram.com',
            'referer': 'https://www.instagram.com/',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Mobile Safari/537.36',
            'x-csrftoken': 'DqBQgbH1p7xEAaettRA0nmApvVJTi1mR',
            'x-ig-app-id': '936619743392459',
            'x-ig-www-claim': '0',
            'x-instagram-ajax': 'bc3d5af829ea',
            'x-requested-with': 'XMLHttpRequest'}		
       k = requests.post(url,headers=headers,data=data)
       if 'authenticated":true' in k.text or 'userId' in k.text:
           print(f"{r}[{N}+{C}] -> {N}  BAŞARLI GİRİŞ ✅")
           print('')
           ([linux, windows][os.name == 'nt'])
           sessionid = k.cookies['sessionid']
       else:
           print(f"{r}[{N}+{C}]{N}  BAŞARSIZ GİRİŞ ")
           exit()
       user = str(input(f"{r}[{N}+{C}] -> {N}  LİST ÇEKİLECEK KULLANCI ADI GİR : "))
       listoo = ['HI']
       rs_id = requests.get("https://i.instagram.com/api/v1/users/web_profile_info/?username=%s"%(user),headers={
		 'Accept': '*/*',
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'en-US,en;q=0.9',
    'Cookie': f'mid=Y3bGYwALAAHNwaKANMB8QCsRu7VA; ig_did=092BD3C7-0BB2-414B-9F43-3170EAED8778; ig_nrcb=1; shbid=1685054; shbts=1675191368.6684434090; rur=CLN; ig_direct_region_hint=ATN; csrftoken=gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO; ds_user_id=921803283; sessionid={sessionid}',
    'Sec-Ch-Prefers-Color-Scheme': 'dark',
    'Sec-Ch-Ua': '"Not.A/Brand";v="8", "Chromium";v="114", "Microsoft Edge";v="114"',
    'Sec-Ch-Ua-Full-Version-List': '"Not.A/Brand";v="8.0.0.0", "Chromium";v="114.0.5735.201", "Microsoft Edge";v="114.0.1823.67"',
    'Sec-Ch-Ua-Mobile': '?0',
    'Sec-Ch-Ua-Platform': '"Windows"',
    'Sec-Ch-Ua-Platform-Version': '"15.0.0"',
    'Sec-Fetch-Dest': 'empty',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Site': 'same-origin',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.67',
    'X-Asbd-Id': '129477',
    'X-Csrftoken': 'gLlFX76z8qqwDgmh8ZIp3uFhAeX4zKdO',
    'X-Ig-App-Id': '936619743392459',
    'X-Ig-Www-Claim': 'hmac.AR0g7ECdkTdrXy37TE9AoSnMndccWbB1cqrccYOZSLfcb8sd',
    'X-Requested-With': 'XMLHttpRequest',
        });jsn3=rs_id.json()['data']['user']
       id_tr = jsn3['id']
       print('')
       print(f"{r}[{N}1{C}] -> {N}  TAKİP EDENLER'DEN'  ")
       print('')
       print(f"{r}[{N}2{C}] -> {N}  TAKİPÇİLER'DEN'  ")
       print('')
       o = str(input(f"{C}[{N}→{C}] {N}HANGİSİNDEN LİST ÇEKİLSİN SEÇ : {r}"))
       if o == '1':
         fg(id_tr)
       elif o == '2':
          fs(id_tr)
       else:
           print(f"{r}[{N}+{C}]{N}  HATALI TUŞLAMA ")
           exit()
elif egi == 3:
    def fff():
        txt= input(f'{C}SİLİNECEK OLAN LİST ADINI GİRİNİZ ➪  ')
        os.system(f'rm -rf {txt}')
        print('')
        print(f'{r}{C}[{N}+{C}]{N} LİST BAŞARIYLA SİLİNDİ ')
        exit()
    fff()
elif egi == 4:
    print(f"""
    {r}[{N}1{C}] {r}-> {N}   KANAL
    [{N}2{C}]{r} -> {N}   KURUCU
    """)
    f1 = int(input(f"{C}[{N}→{C}] {N}SEÇ DOSTUM : {r}"))
    if f1 == 1:
        webbrowser.open('https://t.me/Votlextool1')
        exit()
    elif f1 == 2:
      webbrowser.open('https://t.me/Votlex1')
      exit()
